From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kanaka Raju Nayana <kanaka.raju.nayana@intel.com>
Date: Thu, 9 Oct 2025 09:15:45 +0530
Subject: [PATCH] Add DRM GPUVM symbol renaming for kernel 6.6 compatibility

Kernel 6.6 has partial DRM GPUVM structures that conflict with our
complete backport, causing "redefinition of struct drm_gpuva_op_map"
compilation failures.

Implement automatic symbol renaming by using LINUX_BACKPORT() to resolve
DRM GPUVM redefinition errors when compiling XE driver on kernel 6.6.

Reference:
    b06d47be7c83
    drm/xe: Port Xe to GPUVA

Signed-off-by: Kanaka Raju Nayana <kanaka.raju.nayana@intel.com>
---
 include/drm/drm_gpuvm.h | 34 ++++++++++++++++++++++++++++++++++
 1 file changed, 34 insertions(+)

diff --git a/include/drm/drm_gpuvm.h b/include/drm/drm_gpuvm.h
index 00d4e43..e39ae2e 100644
--- a/include/drm/drm_gpuvm.h
+++ b/include/drm/drm_gpuvm.h
@@ -29,15 +29,46 @@
 #include <linux/list.h>
 #include <linux/rbtree.h>
 #include <linux/types.h>
+#ifdef BPM_DRM_GPUVM_RENAMING_SYMBOLS
+#include <drm/drm_gpuva_mgr.h>
+#endif
 
 #include <drm/drm_device.h>
 #include <drm/drm_gem.h>
 #include <drm/drm_exec.h>
 
+#ifdef BPM_DRM_GPUVM_RENAMING_SYMBOLS
+#define drm_gpuva LINUX_BACKPORT(drm_gpuva)
+#define drm_gpuva_insert LINUX_BACKPORT(drm_gpuva_insert)
+#define drm_gpuva_remove LINUX_BACKPORT(drm_gpuva_remove)
+#define drm_gpuva_link LINUX_BACKPORT(drm_gpuva_link)
+#define drm_gpuva_unlink LINUX_BACKPORT(drm_gpuva_unlink)
+#define drm_gpuva_find LINUX_BACKPORT(drm_gpuva_find)
+#define drm_gpuva_find_first LINUX_BACKPORT(drm_gpuva_find_first)
+#define drm_gpuva_find_prev LINUX_BACKPORT(drm_gpuva_find_prev)
+#define drm_gpuva_find_next LINUX_BACKPORT(drm_gpuva_find_next)
+#define drm_gpuva_init LINUX_BACKPORT(drm_gpuva_init)
+#define drm_gpuva_invalidate LINUX_BACKPORT(drm_gpuva_invalidate)
+#define drm_gpuva_invalidated LINUX_BACKPORT(drm_gpuva_invalidated)
+#define __drm_gpuva_next LINUX_BACKPORT(__drm_gpuva_next)
+#define drm_gpuva_op_map LINUX_BACKPORT(drm_gpuva_op_map)
+#define drm_gpuva_op_unmap LINUX_BACKPORT(drm_gpuva_op_unmap)
+#define drm_gpuva_op_remap LINUX_BACKPORT(drm_gpuva_op_remap)
+#define drm_gpuva_op_prefetch LINUX_BACKPORT(drm_gpuva_op_prefetch)
+#define drm_gpuva_op LINUX_BACKPORT(drm_gpuva_op)
+#define drm_gpuva_ops LINUX_BACKPORT(drm_gpuva_ops)
+#define drm_gpuva_ops_free LINUX_BACKPORT(drm_gpuva_ops_free)
+#define drm_gpuva_init_from_op LINUX_BACKPORT(drm_gpuva_init_from_op)
+#define drm_gpuva_map LINUX_BACKPORT(drm_gpuva_map)
+#define drm_gpuva_remap LINUX_BACKPORT(drm_gpuva_remap)
+#define drm_gpuva_unmap LINUX_BACKPORT(drm_gpuva_unmap)
+#endif
+
 struct drm_gpuvm;
 struct drm_gpuvm_bo;
 struct drm_gpuvm_ops;
 
+#ifndef BPM_DRM_GPUVM_RENAMING_SYMBOLS
 /**
  * enum drm_gpuva_flags - flags for struct drm_gpuva
  */
@@ -61,6 +92,7 @@ enum drm_gpuva_flags {
 	 */
 	DRM_GPUVA_USERBITS = (1 << 2),
 };
+#endif
 
 /**
  * struct drm_gpuva - structure to track a GPU VA mapping
@@ -787,6 +819,7 @@ void drm_gpuvm_bo_extobj_add(struct drm_gpuvm_bo *vm_bo);
 #define drm_gpuvm_bo_for_each_va_safe(va__, next__, vm_bo__) \
 	list_for_each_entry_safe(va__, next__, &(vm_bo)->list.gpuva, gem.entry)
 
+#ifndef BPM_DRM_GPUVM_RENAMING_SYMBOLS
 /**
  * enum drm_gpuva_op_type - GPU VA operation type
  *
@@ -813,6 +846,7 @@ enum drm_gpuva_op_type {
 	 */
 	DRM_GPUVA_OP_PREFETCH,
 };
+#endif
 
 /**
  * struct drm_gpuva_op_map - GPU VA map operation
-- 
2.43.0

