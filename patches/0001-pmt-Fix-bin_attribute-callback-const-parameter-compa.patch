From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kanaka Raju Nayana <kanaka.raju.nayana@intel.com>
Date: Wed, 29 Oct 2025 05:32:30 +0530
Subject: [PATCH] pmt: Fix bin_attribute callback const parameter compatibility

Starting from kernel v6.14, bin_attribute callback functions now
expect a const struct bin_attribute * parameter.

The mmap callback signature changed:
Before (< v6.14):
int (*mmap)(struct file *, struct kobject *,
            struct bin_attribute *, ...)

After (>= v6.14):
int (*mmap)(struct file *, struct kobject *,
            const struct bin_attribute *, ...)

Add conditional compilation to support both old and new
callback signatures, ensuring compatibility across kernel versions.

Reference:
    94a20fb9af16
    sysfs: treewide: constify attribute callback of bin_attribute::mmap()

Signed-off-by: Kanaka Raju Nayana <kanaka.raju.nayana@intel.com>
---
 drivers/platform/x86/intel/pmt/class.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/drivers/platform/x86/intel/pmt/class.c b/drivers/platform/x86/intel/pmt/class.c
index 7233b65..c78f151 100644
--- a/drivers/platform/x86/intel/pmt/class.c
+++ b/drivers/platform/x86/intel/pmt/class.c
@@ -103,9 +103,15 @@ intel_pmt_read(struct file *filp, struct kobject *kobj,
 	return count;
 }
 
+#ifdef BPM_CONST_STRUCT_BIN_ATTRIBUTE_IS_NOT_PRESENT
+static int
+intel_pmt_mmap(struct file *filp, struct kobject *kobj,
+               struct bin_attribute *attr, struct vm_area_struct *vma)
+#else
 static int
 intel_pmt_mmap(struct file *filp, struct kobject *kobj,
 		const struct bin_attribute *attr, struct vm_area_struct *vma)
+#endif
 {
 	struct intel_pmt_entry *entry = container_of(attr,
 						     struct intel_pmt_entry,
-- 
2.43.0

