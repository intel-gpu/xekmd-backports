# Intel® Graphics Driver Backports for Linux® OS

Contains the backported kernel module source code for Intel® GPUs on various OS distributions and LTS Kernels.

This backport provides early access of discrete GFX functionalities which are not landed in OS Distribution Kernels.

You can create Dynamic Kernel Module Support (DKMS) as well as pre-compiled out-of-tree modules packages, which can be installed on supported OS distributions.

We are using [backport project](https://backports.wiki.kernel.org/index.php/Main_Page) to generate out-of-tree xe kernel module source codes.

## Prerequisite
We have dependencies on the following packages
  - automake
  - dkms
  - make
  - debhelper
  - devscripts

```
$ sudo apt install automake dkms make debhelper devscripts
```
For DKMS modules, we need to install `dkms` package too.
```
$ sudo apt install dkms
```

## Dependencies

 These drivers have a dependency on Intel_ GPU firmware and a few more kernel mode drivers may be needed based on specific use cases, platforms, and distributions. The source code of additional drivers should be available at [Intel GPU](https://github.com/intel-gpu)

- [Intel_ GPU firmware](https://github.com/intel-gpu/intel-gpu-firmware) - Firmware required by Intel_ GPUs.

Each project is tagged consistently, so when pulling these repos, pull the same tag.

## Package creation

### Dynamic Kernel Module Support(DKMS)

Creating xe DKMS packages
```
$ make <DKMS Package Target>

Example:
	$ make xe-dkms-deb-pkg

Generated package name :
	intel-xe-dkms_1.586.241121.0+i1-1_all.deb
```
Above command will create Debian package in parent folder. **intel-xe-dkms_<**release version**>.<**kernel-version**>.deb**

## Installation and verification
```
$ sudo dpkg -i intel-xe*.deb
```
Reboot the device after installation of all packages.
```
$ sudo reboot
```
For verification, Please grep **backport** from dmesg after reboot. You should see something like below
```
$ sudo dmesg |grep -i backport
[.....] COMPAT: Backport init, Module is backported from xe-586
```
## Uninstallation
```
$ sudo dpkg -r intel-xe*
```
Reboot the device after uninstallation of all packages.
```
$ sudo reboot
```

## Compiling Code

Autotools have a series of commands to generate configure and Makefile. In order
to make life simple, use script created. 

Command to build:

`
./compile.sh <headers-path>
`

By default, "<headers-path>" is set as standard headers path of currently booted kernel i.e., /lib/modules/<uname -r>/build


Note: For adding new M4 Files, please follow [Rules](src/docs/README_rules.md) Document.
